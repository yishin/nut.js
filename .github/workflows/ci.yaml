name: Run CI
on:
  #  push:
  #    branches-ignore:
  #      - develop
  #      - release/**
  #    paths-ignore:
  #      - '**/*.md'
  pull_request:

jobs:
  sonar:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Setup Docker
        run: |
          docker pull s1hofmann/nut-ci:latest
          docker run -it -d --name nut-ci --shm-size 8gb --user $(id -u):$(id -g) -v ${PWD}:${PWD}:rw s1hofmann/nut-ci:latest bash
      - name: Install
        run: npm ci
      - name: Compile
        run: npm run compile
      - name: Init window e2e test subpackage
        run: npm --prefix e2e/window-test ci
      - name: Clean coverage report
        run: npm run coverage:clean
      - name: Generate coverage report
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm run coverage -- --coverageDirectory=coverage/unit
      - name: Run Docker E2E tests
        run: docker exec nut-ci bash -c "bash $PWD/.build/build.sh ${PWD} 14"
      - name: Run Electron e2e test subpackage
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm --prefix e2e/electron-test cit
      - name: Merge coverage reports
        run: |
          npm run coverage:merge
          npm run coverage:merge-report
      - name: Send results to SonarCloud
        uses: SonarSource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test:
    needs:
      - sonar
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        node: [16]
    runs-on: ${{matrix.os}}
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node}}
      - name: Setup Docker
        if: ${{matrix.os == 'ubuntu-latest'}}
        run: |
          docker pull s1hofmann/nut-ci:latest
          docker run -it -d --name nut-ci --shm-size 8gb --user $(id -u):$(id -g) -v ${PWD}:${PWD}:rw s1hofmann/nut-ci:latest bash
      - name: Install
        run: npm ci
      - name: Compile
        run: npm run compile
      - name: Init window e2e test subpackage
        run: npm --prefix e2e/window-test ci
      - name: Generate coverage report
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm run coverage -- --coverageDirectory=coverage/unit
      - name: Run Docker E2E tests
        if: ${{matrix.os == 'ubuntu-latest'}}
        run: docker exec nut-ci bash -c "bash $PWD/.build/build.sh ${PWD} ${{matrix.node}}"
      - name: Run Electron e2e test subpackage
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm --prefix e2e/electron-test cit
